GOFLAGS="-mod=mod"
# emulate as close as possible upstream ci target
# upstream ci target: verify-modules verify all test
# we skip verify for now
#  we only need to modify test, all to avoid docker usage
.PHONY: ci
ci:
	GOFLAGS=$(GOFLAGS) make verify-modules
	make -f Makefile.prow all test

.PHONY: all
all:
	GOFLAGS=$(GOFLAGS) make local
	GOFLAGS=$(GOFLAGS) BIN=velero-restic-restore-helper make local

.PHONY: test
# our test is modified to avoid docker usage
test: hack-docker
	@echo Using KUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS)
	KUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) GOFLAGS=$(GOFLAGS) hack/test.sh

.PHONY: hack-docker
# emulate docker environment from hack/build-image/Dockerfile
hack-docker: envtest

GOPATH:=$(shell go env GOPATH)
#  if KUBEBUILDER_ASSETS contains space, escape it
KUBEBUILDER_ASSETS=$(shell echo $(shell $(GOPATH)/bin/setup-envtest use -p path) | sed 's/ /\\ /g')
.PHONY: envtest
envtest: $(GOPATH)/bin/setup-envtest
	$(GOPATH)/bin/setup-envtest use -p path

$(GOPATH)/bin/setup-envtest:
	go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest
